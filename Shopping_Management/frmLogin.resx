<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>